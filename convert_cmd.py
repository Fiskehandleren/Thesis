import json

config_str = '''{"gpus":{"desc":null,"value":null},"ipus":{"desc":null,"value":null},"loss":{"desc":null,"value":"CPNLL"},"mode":{"desc":null,"value":"train"},"_wandb":{"desc":null,"value":{"m":[{"1":"trainer/global_step","6":[3]},{"1":"val_loss","5":1,"6":[1]},{"1":"val_loss_true","5":1,"6":[1]},{"1":"val_mae","5":1,"6":[1]},{"1":"val_rmse","5":1,"6":[1]},{"1":"val_mse","5":1,"6":[1]},{"1":"epoch","5":1,"6":[1]},{"1":"train_loss","5":1,"6":[1]},{"1":"train_loss_true","5":1,"6":[1]},{"1":"train_mae","5":1,"6":[1]},{"1":"train_rmse","5":1,"6":[1]},{"1":"train_mse","5":1,"6":[1]},{"1":"test_loss","5":1,"6":[1]},{"1":"test_loss_true","5":1,"6":[1]},{"1":"test_mae","5":1,"6":[1]},{"1":"test_rmse","5":1,"6":[1]},{"1":"test_mse","5":1,"6":[1]}],"t":{"1":[1,9,41,51,55,77],"2":[1,9,41,51,55,77],"3":[2,5,7,23],"4":"3.8.2","5":"0.14.0","8":[5]},"framework":"lightning","start_time":1682468138.47843,"cli_version":"0.14.0","is_jupyter_run":false,"python_version":"3.8.2","is_kaggle_kernel":false}},"logger":{"desc":null,"value":true},"cluster":{"desc":null,"value":null},"devices":{"desc":null,"value":1},"loss_fn":{"desc":null,"value":"censored_poisson_negative_log_likelihood"},"plugins":{"desc":null,"value":null},"val_end":{"desc":null,"value":"2019-05-02"},"censored":{"desc":null,"value":true},"max_time":{"desc":null,"value":null},"profiler":{"desc":null,"value":null},"strategy":{"desc":null,"value":null},"test_end":{"desc":null,"value":"2019-06-30"},"amp_level":{"desc":null,"value":null},"benchmark":{"desc":null,"value":null},"max_steps":{"desc":null,"value":-1},"min_steps":{"desc":null,"value":null},"num_nodes":{"desc":null,"value":1},"precision":{"desc":null,"value":32},"tpu_cores":{"desc":null,"value":null},"train_end":{"desc":null,"value":"2019-01-01"},"batch_size":{"desc":null,"value":67},"covariates":{"desc":null,"value":false},"dataloader":{"desc":null,"value":"EVChargersDatasetSpatial"},"hidden_dim":{"desc":null,"value":38},"max_epochs":{"desc":null,"value":10},"min_epochs":{"desc":null,"value":null},"model_name":{"desc":null,"value":"TGCN"},"pretrained":{"desc":null,"value":null},"accelerator":{"desc":null,"value":"gpu"},"amp_backend":{"desc":null,"value":null},"train_start":{"desc":null,"value":"2018-01-01"},"auto_lr_find":{"desc":null,"value":false},"censor_level":{"desc":null,"value":"2"},"fast_dev_run":{"desc":null,"value":false},"weight_decay":{"desc":null,"value":0.0998543610822035},"forecast_lead":{"desc":null,"value":1},"learning_rate":{"desc":null,"value":0.04273100373245771},"no_self_loops":{"desc":null,"value":true},"node_features":{"desc":null,"value":1},"num_processes":{"desc":null,"value":null},"censor_dynamic":{"desc":null,"value":true},"detect_anomaly":{"desc":null,"value":false},"inference_mode":{"desc":null,"value":true},"sync_batchnorm":{"desc":null,"value":false},"overfit_batches":{"desc":null,"value":0},"sequence_length":{"desc":null,"value":336},"track_grad_norm":{"desc":null,"value":-1},"auto_select_gpus":{"desc":null,"value":null},"default_root_dir":{"desc":null,"value":null},"forecast_horizon":{"desc":null,"value":1},"save_predictions":{"desc":null,"value":false},"gradient_clip_val":{"desc":null,"value":null},"limit_val_batches":{"desc":null,"value":null},"log_every_n_steps":{"desc":null,"value":50},"limit_test_batches":{"desc":null,"value":null},"val_check_interval":{"desc":null,"value":null},"enable_progress_bar":{"desc":null,"value":true},"limit_train_batches":{"desc":null,"value":null},"move_metrics_to_cpu":{"desc":null,"value":false},"replace_sampler_ddp":{"desc":null,"value":true},"enable_checkpointing":{"desc":null,"value":true},"enable_model_summary":{"desc":null,"value":true},"num_sanity_val_steps":{"desc":null,"value":2},"auto_scale_batch_size":{"desc":null,"value":false},"limit_predict_batches":{"desc":null,"value":null},"resume_from_checkpoint":{"desc":null,"value":null},"accumulate_grad_batches":{"desc":null,"value":null},"check_val_every_n_epoch":{"desc":null,"value":1},"gradient_clip_algorithm":{"desc":null,"value":null},"multiple_trainloader_mode":{"desc":null,"value":"max_size_cycle"},"reload_dataloaders_every_n_epochs":{"desc":null,"value":0}}'''

config = json.loads(config_str)

def extract_command_line_args(config):
    args = []
    for key, value in config.items():
        if not isinstance(value, dict) or "desc" not in value or "value" not in value or '_wandb' in key:
            continue
        if value["value"] is not None:
            args.append(f"--{key} {value['value']}")
    return " ".join(args)

command_line_args = extract_command_line_args(config)
print('python main.py ' + command_line_args)